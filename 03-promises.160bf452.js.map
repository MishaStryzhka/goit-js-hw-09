{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAU,SAACC,GACpCA,EAAEC,iBAEF,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALI,MAAOC,EAAIL,EAAJK,KAAMC,EAAMN,EAANM,OAEvBC,EAAW,EACXC,EAAaL,EAAMM,MAEvBC,aAAY,WAed,IAAuBC,EAAUP,EACzBQ,EAfAN,EAAOG,OAASF,KAcDI,EAbHJ,EAaaH,EAbHI,EActBI,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUP,UAEpBa,EAAO,CAAEN,WAAUP,S,GAEpBA,E,KArBEe,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUP,EAAKgB,EAALhB,MACjBZ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANnB,EAAM,M,IAE9DoB,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUP,EAAKgB,EAALhB,MAClBZ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANnB,EAAM,M,IAE9DI,GAAcL,EAAMM,QAASJ,EAAKI,MAASF,EAC3CA,GAAY,E,GAEb,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form')\n}\n\nrefs.form.addEventListener('submit', (e) => {\n  e.preventDefault();\n\n  const {\n    elements: { delay, step, amount }\n  } = e.currentTarget;\n  let position = 1;\n  let totalDelay = delay.value;\n\n  setInterval(() => {\n    if (amount.value >= position) {\n      createPromise(position, totalDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n      totalDelay = +delay.value + +step.value * (position);\n      position += 1;\n    };\n  }, 0);\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n  })\n}\n"],"names":["$h6c0i","parcelRequire","form","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","delay","step","amount","position1","totalDelay","value","setInterval","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.160bf452.js.map"}